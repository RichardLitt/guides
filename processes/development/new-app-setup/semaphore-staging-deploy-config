# install stuff

curl "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "awscli-bundle.zip"
unzip awscli-bundle.zip
./awscli-bundle/install -b ~/bin/aws
wget -qO- https://toolbelt.heroku.com/install.sh | sh

# Copy production mongo data to staging

heroku maintenance:on

## install mongo 3.2 client so that we can connect to mongo 3.2 server
wget http://repo.mongodb.org/apt/ubuntu/dists/trusty/mongodb-org/3.2/multiverse/binary-amd64/mongodb-org-tools_3.2.6_amd64.deb
wget http://repo.mongodb.org/apt/ubuntu/dists/trusty/mongodb-org/3.2/multiverse/binary-amd64/mongodb-org-shell_3.2.6_amd64.deb
sudo dpkg -i ./mongodb-org-tools_3.2.6_amd64.deb
sudo dpkg -i ./mongodb-org-shell_3.2.6_amd64.deb

mongodump --host PRODUCTION_HOST --port PORT --db DATABASE -u PRODUCTION_USER -p PASSWORD -o mongodump
echo 'db.getCollectionNames().forEach(function(c) {if (c.indexOf("system.") == -1) {db.getCollection(c).drop();}})' | mongo STAGING_HOSTNAME:PORT/DB_NAME -u USER -p PASSWORD
mongorestore -h STAGING_HOST:PORT -d DATABASE -u USER -p PASSWORD mongodump/*

# Copy production S3 data to staging

export AWS_ACCESS_KEY_ID=XXX
export AWS_SECRET_ACCESS_KEY=XXX
~/bin/aws s3 sync --size-only s3://APPNAME-app-production s3://APPNAME-app-staging

heroku maintenance:off

# Deploy
git push --force heroku $BRANCH_NAME:master
